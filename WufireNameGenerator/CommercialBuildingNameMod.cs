// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using ColossalFramework.Globalization;
using ColossalFramework.Math;
using System;
using System.Collections.Generic;
namespace WufireNameGenerator
{
	internal class CommercialBuildingNameMod : CommercialBuildingAI
	{
		//
		// Methods
		//
		private string _GenCommercialName(ItemClass.SubService subclass, Randomizer random) {
			if (this.m_info.m_class.m_subService == ItemClass.SubService.CommercialHigh)
			{
				List<string> list4 = new List<string> (new string[]
				                                       {
					"The",
					"Big",
					"Classy",
					"Colossal",
					"Fine",
					"Fancy",
					"Giant",
					"Giga",
					"Golden",
					"Mega",
					"Modern",
					"Neptune",
					"Quality",
					"Orwell's",
					"Sterling",
					"Superficial",
					"Trusty",
					"Worthy"
				});
				List<string> list5 = new List<string> (new string[]
				                                       {
					"Accoutrement",
					"Art",
					"Bridal",
					"Camera",
					"Caviar",
					"Cheese",
					"Clothing",
					"Computer",
					"Electronics",
					"Lingerie",
					"Media",
					"Rubber Duck",
					"Shopping",
					"Stuff",
					"Things",
					"Wine"
				});
				List<string> list6 = new List<string> (new string[]
				                                       {
					"Center",
					"Depot",
					"Emporium",
					"Enterprise",
					"Gallery",
					"Mall",
					"Market",
					"Sales",
					"Shop",
					"Shoppe",
					"Store",
					"Supermarket",
					"Superstore",
					"Venue"
				});
				int num5 = random.Int32 ((uint)list4.Count);
				int num6 = random.Int32 ((uint)list5.Count);
				int num7 = random.Int32 ((uint)list6.Count);
				string text6 = list4[num5];
				string text7 = list5[num6];
				string text8 = list6[num7];
				string text9 = string.Concat (new string[]
				                              {
					text6,
					" ",
					text7,
					" ",
					text8
				});
				return text9;
			}
			return "";
		}

		public override string GenerateName (ushort buildingID, InstanceID caller)
		{
			if (this.m_info.m_prefabDataIndex == -1)
			{
				return null;
			}
			Randomizer randomizer = new Randomizer ((int)buildingID);
			string key = PrefabCollection<BuildingInfo>.PrefabName ((uint)this.m_info.m_prefabDataIndex);
			uint num = Locale.CountUnchecked ("BUILDING_NAME", key);
			if (num != 0u)
			{
				return Locale.Get ("BUILDING_NAME", key, randomizer.Int32 (num));
			}
			return BuildingNameGenerator.GenerateName(this.m_info.m_class.m_subService, randomizer);
		}
	}
}

